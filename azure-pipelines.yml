resources:
- repo: self

trigger:
  branches:
    include:
    - '*'

jobs:
- job: LinuxAMD64
  pool:
    vmImage: 'ubuntu-16.04'
  workspace:
    clean: 'all'
  strategy:
    matrix:
      TPM_SIMULATOR_ON:
        TPM_SIMULATOR: 'ON'
        ARCH: 'AMD64'
      TPM_SIMULATOR_OFF:
        TPM_SIMULATOR: 'OFF'
        ARCH: 'AMD64'
  steps:
    - script: |
        docker run \
          -e OUTPUT_DIR -e ARCH -e TPM_SIMULATOR
          -v `pwd`:/workspace \
          -v $OUTPUT_DIR:/output \
          -i --rm --privileged \
          debian:9 \
          build.sh
      env:
        SDK_TAG: '2019-05-16'
        OUTPUT_DIR: $(Build.ArtifactStagingDirectory)
      displayName: 'Build'
    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'LinuxAMD64'
        targetPath: $(Build.ArtifactStagingDirectory)

- job: LinuxARM
  pool:
    vmImage: 'ubuntu-16.04'
  workspace:
    clean: 'all'
  strategy:
    matrix:
      TPM_SIMULATOR_ON:
        TPM_SIMULATOR: 'ON'
        ARCH: 'ARM'
      TPM_SIMULATOR_OFF:
        TPM_SIMULATOR: 'OFF'
        ARCH: 'ARM'
  steps:
    - script: |
        wget https://github.com/multiarch/qemu-user-static/releases/download/v4.0.0-2/qemu-arm-static
      displayName: 'Download QEMU'
    - script: |
        docker run \
          -e OUTPUT_DIR -e ARCH -e TPM_SIMULATOR
          -v `pwd`:/workspace \
          -v $OUTPUT_DIR:/output \
          -v `pwd`/qemu-arm-static:/usr/bin/qemu-arm-static \
          -i --rm --privileged \
          arm32v7/debian:9 \
          build.sh
      env:
        SDK_TAG: '2019-05-16'
        OUTPUT_DIR: $(Build.ArtifactStagingDirectory)
      displayName: 'Build'
    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'LinuxARM'
        targetPath: $(Build.ArtifactStagingDirectory)
